services:
  redis:
    image: redis:7-alpine
    networks:
      - auction_net
    container_name: auction_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--save", "900", "1", "--appendonly", "yes"]

  postgres:
    image: postgres:15-alpine
    networks:
      - auction_net
    container_name: auction_postgres
    environment:
      POSTGRES_USER: auction_user
      POSTGRES_PASSWORD: auction_password
      POSTGRES_DB: auction_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  kafka:
    image: bitnami/kafka:3.6
    container_name: auction_kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@auction_kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - auction_net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    networks:
      - auction_net
    container_name: kafka_ui
    ports:
      - "8080:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local_cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: localhost:9092
    depends_on:
      - kafka

  logger:
    build:
      context: .
      dockerfile: Dockerfile.logger
    container_name: auction_logger
    environment:
      - KAFKA_BROKER=kafka:9092
      - AUDIT_TOPIC=audit-logs
      - ORDER_TOPIC=order-events
      - WALLET_TOPIC=wallet-events
      - STOCK_TOPIC=stock-events
      - LOG_STORAGE_TYPE=file
      - LOG_FILE_PATH=/app/logs/audit.jsonl
    volumes:
      - logger_data:/app/logs
    networks:
      - auction_net
    depends_on:
      - kafka
    restart: unless-stopped

volumes:
  redis_data:
  pgdata:
  kafka_data:
  logger_data:

networks:
  auction_net:
    driver: bridge
